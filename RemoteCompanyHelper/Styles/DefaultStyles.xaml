<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RemoteCompanyHelper.Styles"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    
    <!-- Fonts -->
    <FontFamily x:Key="BaseFont">Consolas</FontFamily>
    <system:Double x:Key="Small">14</system:Double>
    <system:Double x:Key="Regular">16</system:Double>
    <system:Double x:Key="Big">20</system:Double>
    <system:Double x:Key="H1">30</system:Double>
    <system:Double x:Key="SuperBig">45</system:Double>
    <system:Double x:Key="UltraBig">60</system:Double>
    
    <!-- Colors -->
    <SolidColorBrush x:Key="DarkBaseBrush" Color="#171f24" />
    <Color x:Key="DarkBaseColor">#171f24</Color>

    <SolidColorBrush x:Key="HardBaseBrush" Color="#222c36" />
    <Color x:Key="HardBaseColor">#222c36</Color>

    <SolidColorBrush x:Key="MediumBaseBrush" Color="#2E333A" />
    <Color x:Key="MediumBaseColor">#2E333A</Color>

    <SolidColorBrush x:Key="LightBaseBrush" Color="#777777" />
    <Color x:Key="LightBaseColor">#777777</Color>
    
    <SolidColorBrush x:Key="SoftLightBaseBruh" Color="#AAAAAA" />
    <Color x:Key="SoftLightBaseColor">#AAAAAA</Color>
    
    <SolidColorBrush x:Key="SuperLightBaseBrush" Color="#CCC" />
    <Color x:Key="SuperLightBaseColor">#CCC</Color>

    <SolidColorBrush x:Key="UltraLightBaseBrush" Color="#FFFFFF" />
    <Color x:Key="UltraLightBaseColor">#FFFFFF</Color>
    
    <SolidColorBrush x:Key="ErrorBrush" Color="#ED4337" />
    

    
    <!-- Texts -->
    <Style x:Key="BaseText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="FontSize" Value="{StaticResource Regular}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Foreground" Value="{StaticResource UltraLightBaseBrush}" />
    </Style>

    <Style x:Key="BaseLabel" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="FontSize" Value="{StaticResource Big}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Foreground" Value="{StaticResource UltraLightBaseBrush}" />
    </Style>

    <Style x:Key="BaseTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="FontSize" Value="{StaticResource Regular}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource UltraLightBaseBrush}" />
        <Setter Property="Foreground" Value="{StaticResource MediumBaseBrush}" />
        <Setter Property="CaretBrush" Value="{StaticResource MediumBaseBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid Margin="5">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                            <TextBlock Padding="3 0 0 0"
                                x:Name="hint"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{StaticResource LightBaseBrush}"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding Tag}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="hint" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkRoundTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="FontSize" Value="{StaticResource Regular}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource MediumBaseBrush}" />
        <Setter Property="Foreground" Value="{StaticResource UltraLightBaseBrush}" />
        <Setter Property="CaretBrush" Value="{StaticResource UltraLightBaseBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="20">
                        <Grid Margin="5">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                            <TextBlock
                                x:Name="hint"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="Transparent"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{StaticResource SuperLightBaseBrush}"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding Tag}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                TextWrapping="{TemplateBinding TextWrapping}"
                                Visibility="Collapsed"
                                Padding="3 0 0 0"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="hint" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BasePasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="FontSize" Value="{StaticResource Regular}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource UltraLightBaseBrush}" />
        <Setter Property="Foreground" Value="{StaticResource MediumBaseBrush}" />
        <Setter Property="CaretBrush" Value="{StaticResource MediumBaseBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="5">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                            <TextBlock Padding="3 0 0 0"
                                x:Name="hint"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{StaticResource LightBaseBrush}"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding Tag}"
                                TextAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Visibility="Visible" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Buttons -->
    <Style x:Key="BaseButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SuperLightBaseBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="FontSize" Value="{StaticResource Big}" />
        <Setter Property="Foreground" Value="{StaticResource MediumBaseBrush}" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Name="brd"
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <ContentPresenter
                            Margin="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" Value="{StaticResource SuperLightBaseBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource SoftLightBaseBruh}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource DarkBaseBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource UltraLightBaseBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource LightBaseBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArrowRightBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SuperLightBaseBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="FontSize" Value="{StaticResource Big}" />
        <Setter Property="Foreground" Value="{StaticResource MediumBaseBrush}" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Polygon Fill="{TemplateBinding Background}" Points="0,0 20,0 40,20 20,40 0,40 20,20" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" Value="{StaticResource SuperLightBaseBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource SoftLightBaseBruh}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource DarkBaseBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource UltraLightBaseBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource LightBaseBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ArrowLeftBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource SuperLightBaseBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="FontSize" Value="{StaticResource Big}" />
        <Setter Property="Foreground" Value="{StaticResource MediumBaseBrush}" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Polygon Fill="{TemplateBinding Background}" Points="40,0 20,0 0,20 20,40 40,40 20,20" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" Value="{StaticResource SuperLightBaseBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource SoftLightBaseBruh}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{StaticResource DarkBaseBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource UltraLightBaseBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{StaticResource LightBaseBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ArrowLeftSideBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#0888" />
        <Setter Property="Foreground" Value="#0BBBBBBB" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}">
                            <Polygon VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Foreground}" Points="40,0 20,0 0,20 20,40 40,40 20,20" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0" />
                        </Border>
                     </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" Value="#0888" />
                            <Setter Property="Foreground" Value="#0BBBBBBB" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#2888" />
                            <Setter Property="Foreground" Value="#2BBB" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#3888" />
                            <Setter Property="Foreground" Value="#3BBB" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ArrowRightSideBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#0888" />
        <Setter Property="Foreground" Value="#0BBBBBBB" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" Opacity="{TemplateBinding Opacity}">
                            <Polygon VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{TemplateBinding Foreground}" Points="0,0 20,0 40,20 20,40 0,40 20,20" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" Value="#0888" />
                            <Setter Property="Foreground" Value="#0BBBBBBB" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#2888" />
                            <Setter Property="Foreground" Value="#2BBB" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#3888" />
                            <Setter Property="Foreground" Value="#3BBB" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SemiCircleLeftBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#555" />
        <Setter Property="Foreground" Value="#BBB" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="FontSize" Value="{StaticResource Big}" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="0"
                        Name="brd"
                        Background="{TemplateBinding Background}"
                        CornerRadius="20 0 0 20">
                        <ContentPresenter
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" Value="#555" />
                            <Setter Property="Foreground" Value="#BBB" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#666" />
                            <Setter Property="Foreground" Value="#CCC" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#777" />
                            <Setter Property="Foreground" Value="#DDD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SemiCircleRightBtn" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#555" />
        <Setter Property="Foreground" Value="#BBB" />
        <Setter Property="FontFamily" Value="{StaticResource BaseFont}" />
        <Setter Property="FontSize" Value="{StaticResource Big}" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="0"
                        Name="brd"
                        Background="{TemplateBinding Background}"
                        CornerRadius="0 20 20 0">
                        <ContentPresenter
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="Background" Value="#555" />
                            <Setter Property="Foreground" Value="#BBB" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#666" />
                            <Setter Property="Foreground" Value="#CCC" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#777" />
                            <Setter Property="Foreground" Value="#DDD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path x:Name="arrow" Data="M 0,2 L 8,8 L 16,2" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource SoftLightBaseBruh}" StrokeThickness="3" VerticalAlignment="Center"/>
                            <ContentPresenter x:Name="expHeader" Grid.Column="1" HorizontalAlignment="Left" Margin="5,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center" TextBlock.Foreground="{StaticResource SoftLightBaseBruh}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 0,8  L 8,2  L 16,8"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource UltraLightBaseBrush}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="expHeader" Value="{StaticResource UltraLightBaseBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource SuperLightBaseBrush}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="expHeader" Value="{StaticResource SuperLightBaseBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BaseExpander" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{StaticResource UltraLightBaseBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="Light" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{StaticResource Regular}" FontFamily="{StaticResource BaseFont}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseListView" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border x:Name="Bd"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="True">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background"
                                                TargetName="Bd"
                                                Value="#404D5B"/>
                                        <Setter Property="BorderBrush"
                                                TargetName="Bd"
                                                Value="#404D5B"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background"
                                                TargetName="Bd"
                                                Value="#303D4B"/>
                                        <Setter Property="BorderBrush"
                                                TargetName="Bd"
                                                Value="#303D4B"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background"
                                                TargetName="Bd"
                                                Value="Transparent"/>
                                        <Setter Property="BorderBrush"
                                                TargetName="Bd"
                                                Value="Transparent"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BaseListViewWoMo" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border BorderThickness="0" Background="Transparent" Padding="0">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>